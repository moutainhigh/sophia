#=======================================================================
#======common configure=================================================
#whether to hook when calling middle ware component
bsf.collect.hook.enabled = true
#whether to restart the context,when Apollo configurations changed
bsf.context.restart.enabled = true
#restart log text
bsf.context.restart.text = 
#When get IP using AddressUtils in docker environment, it filters exclude IP regex(start with string) to exclude.
#not required
bsf.util.ip.exclude.regex = 10.42,172
#enable Access-Control-Allow-Origin 
bsf.web.cors.enabled = true

#=======================================================================
#======elk configure====================================================
#elk服务的开关,非必须，默认true
bsf.elk.enabled = true
#elk的服务地址
bsf.elk.destinations = 10.0.193.3:4560
#启动web相关的功能
bsf.elk.web.enabled=true 
#启动web的出参入参，依赖bsf.elk.web.enabled=true
bsf.elk.web.controller.aspect.enabled=true 
#启动日志统计及监控，依赖bsf.elk.web.enabled=true
bsf.health.log.statistic.enabled=true	

#========================================================================
#======cat configure=====================================================
#启用cat
bsf.cat.enabled=true
#Cat服务器地址，必填
cat.server.url=10.0.193.15
#default,cross
#cross模式为调用链模式
bsf.cat.filter=cross

#=========================================================================
#======xxl-job configure==================================================
bsf.job.enabled = false
xxl.job.admin.addresses = http://10.0.193.5:8080/xxl-job-admin

#=========================================================================
#======message configure==================================================
#not required. 
## 消息模块开关
bsf.message.enabled = false
## 钉钉启用开关
bsf.message.dingding.enabled = true
## 短信启动开关
bsf.message.sms.enabled = true
## 短信发送URL地址
sms.url =
## 短信发送用户名
sms.user = 
## 短信发送密码
sms.password =
## 短信发送服务器 
sms.server = 


#=========================================================================
#======rocket MQ configure================================================
## MQ启用开关
bsf.mq.enabled = false
## MQ服务器地址（;隔开）
bsf.rocketmq.namesrvaddr = 10.0.193.20:9876;10.0.193.18:9876


#============================================================================
#======Sharding-jdbc configure================================================
#bsf sharding jdbc启动开关
#ShardingJDBC 相关更详细配置可以参阅ShardingJDBC官网
bsf.shardingjdbc.enabled = true
spring.shardingsphere.datasource.names = master-0,slave-0
spring.shardingsphere.datasource.master-0.type = com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.master-0.driver-class-name = com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.master-0.url = jdbc:mysql://10.0.193.28:3306/test?useUnicode=true&serverTimezone=CTT&characterEncoding=utf-8&autoReconnect=true&autoReconnectForPools=true&zeroDateTimeBehavior=convertToNull&useSSL=false
spring.shardingsphere.datasource.master-0.username =
spring.shardingsphere.datasource.master-0.password = 
spring.shardingsphere.datasource.master-0.filters = stat
spring.shardingsphere.datasource.master-0.max-active = 5
spring.shardingsphere.datasource.master-0.initial-size = 2
spring.shardingsphere.datasource.master-0.max-wait = 60000
spring.shardingsphere.datasource.master-0.min-idle = 1
spring.shardingsphere.datasource.master-0.time-between-eviction-runs-millis = 60000
spring.shardingsphere.datasource.master-0.min-evictable-idle-time-millis = 300000
spring.shardingsphere.datasource.master-0.validation-query = SELECT 'x'
spring.shardingsphere.datasource.master-0.test-while-idle = true
spring.shardingsphere.datasource.master-0.test-on-borrow = false
spring.shardingsphere.datasource.master-0.test-on-return = false
spring.shardingsphere.datasource.master-0.pool-prepared-statements = true
spring.shardingsphere.datasource.master-0.max-open-prepared-statements = 20

spring.shardingsphere.datasource.slave-0.type = com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.slave-0.driver-class-name = com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.slave-0.url = jdbc:mysql://10.0.193.28:3306/test?useUnicode=true&characterEncoding=utf-8&autoReconnect=true&autoReconnectForPools=true&zeroDateTimeBehavior=convertToNull&useSSL=false
spring.shardingsphere.datasource.slave-0.username = 
spring.shardingsphere.datasource.slave-0.password = 
spring.shardingsphere.datasource.slave-0.filters = stat
spring.shardingsphere.datasource.slave-0.max-active = 5
spring.shardingsphere.datasource.slave-0.initial-size = 2
spring.shardingsphere.datasource.slave-0.max-wait = 60000
spring.shardingsphere.datasource.slave-0.min-idle = 1
spring.shardingsphere.datasource.slave-0.time-between-eviction-runs-millis = 60000
spring.shardingsphere.datasource.slave-0.min-evictable-idle-time-millis = 300000
spring.shardingsphere.datasource.slave-0.validation-query = SELECT 'x'
spring.shardingsphere.datasource.slave-0.test-while-idle = true
spring.shardingsphere.datasource.slave-0.test-on-borrow = false
spring.shardingsphere.datasource.slave-0.test-on-return = false
spring.shardingsphere.datasource.slave-0.pool-prepared-statements = true
spring.shardingsphere.datasource.slave-0.max-open-prepared-statements = 20

spring.shardingsphere.masterslave.load-balance-algorithm-type = round_robin
spring.shardingsphere.masterslave.name = master-0
spring.shardingsphere.masterslave.master-data-source-name = master-0
spring.shardingsphere.masterslave.slave-data-source-names = slave-0
spring.shardingsphere.props.sql.show = true

#=========================================================================
#======Eureka configure===================================================
## Eureka启用开关
bsf.eureka.client.enabled = true
## Eureka服务器地址
eureka.client.serviceUrl.defaultZone = http://10.0.193.12:8080/eureka/,http://10.0.193.12:8081/eureka/
## 心跳时间间隔
eureka.client.registry-fetch-interval-seconds = 5
## 负载列表刷新周期
ribbon.ServerListRefreshInterval = 5000
## Eureka注册实例过期时间
eureka.instance.lease-expiration-duration-in-seconds = 5
eureka.instance.lease-renewal-interval-in-seconds = 2
eureka.instance.prefer-ip-address = true
## Feign 请求启用压缩
feign.compression.request.enabled = true
## Feign 响应启用压缩
feign.compression.response.enabled = true
## 请求mime类型
feign.compression.request.mime-types = text/xml,application/xml,application/json
## 请求大小
feign.compression.request.min-request-size = 2048

## KONG register configure
## KONG网关注册开关
bsf.eureka.kong.enabled = true
## KONG服务器地址
bsf.eureka.kong.ip = 10.0.193.253
## KONG服务注册端口
bsf.eureka.kong.port = 8001
## KONG健康检查策略
bsf.eureka.kong.healthchecks.active.unhealthy.tcp_failures = 1
bsf.eureka.kong.healthchecks.active.unhealthy.timeouts = 1
bsf.eureka.kong.healthchecks.active.unhealthy.http_failures = 1
bsf.eureka.kong.healthchecks.active.unhealthy.interval = 5
bsf.eureka.kong.healthchecks.active.healthy.successes = 1
bsf.eureka.kong.healthchecks.active.healthy.interval = 5

#=========================================================================
#======Redis configure====================================================、
##redis启用开关
bsf.redis.enabled = true
bsf.redis.pool.maxTotal = 30
bsf.redis.pool.maxIdle = 30
bsf.redis.pool.minIdle = 0
bsf.redis.pool.testOnBorrow = false
bsf.redis.pool.testWhileIdle = true
bsf.redis.pool.testOnReturn = false
bsf.redis.pool.testOnCreate = false
bsf.redis.pool.timeBetweenEvictionRunsMillis = 30000
bsf.redis.pool.minEvictableIdleTimeMillis = 60000
## redis集群地址
bsf.redis.nodes = 10.0.193.36:7000,10.0.193.37:7005

#=========================================================================
#======Elasticsearch configure============================================
## Elasticserarch 启用开关
bsf.elasticsearch.enabled = false
## Elasticserarch 服务器地址
bsf.es.serverAddrs = 10.0.192.41:9300

#=========================================================================
#======BSF file configure=================================================
## 文件服务启用开关
bsf.file.enabled = false
## 文件服务提供者(qiniu、hotfile)两个选项
bsf.file.provider = qiniu
bsf.file.hotfile.uploadUrl =
bsf.file.hotfile.loginToken = 
## 七牛服务的 accessKey及securityKey 
bsf.file.qiniu.accessKey = 
bsf.file.qiniu.securityKey = 
bsf.file.qiniu.bucketName =
bsf.file.qiniu.bucketUrl = 

#=========================================================================
#======BSF health configure===============================================
## 健康检查启动用开关
bsf.health.enabled = true
## 健康检查自动清理日志开关
bsf.health.io.autoClear = true
## 健康检查告警开关
bsf.health.warn.enabled = true
## 健康定期检查告警开关
bsf.health.check.enabled = true
## 报告导出开关
bsf.health.export.enabled = true
## ELK健康报告导出开源
bsf.health.export.elk.enabled = false
## cat报告导出开关
bsf.health.export.cat.enabled = true
## 日志统计开关
bsf.health.log.statistic.enabled = true
## JVM dump功能开关
bsf.health.dump.enabled = true
## HTTP 探活接口
bsf.health.ping.enabled = true
## 占用内存大的可疑接口
bsf.health.doubtapi.enabled = true
## 占用内存大的可疑接口的阈值
bsf.health.doubtapi.threshold = 3145728
## 文件服务健康检查
bsf.health.file.enabled = true
bsf.health.file.timeSpan = 20
## 进程CPU报警策略（>0.9则报警）
bsf.health.strategy.cpu.process = [>0.9]
## 系统CPU报警策略（>0.8则报警）
bsf.health.strategy.cpu.system = [>0.8]
## 可用磁盘空间报警策略
bsf.health.strategy.io.current.dir.usable.size = [<500]
## 可用内存报警策略
bsf.health.strategy.memery.system.free = [<256]
## 可用JVM内存报警策略
bsf.health.strategy.memery.jvm.max = [<100]
## TOMCAT线程等待队列报警策略
bsf.health.strategy.tomcat.threadPool.queue.size = [>20]
## TOMCAT线程数量报警策略
bsf.health.strategy.tomcat.threadPool.active.count = [>100]
## 错误日志数量报警侧率
bsf.health.strategy.log.error.count = [>50]
## 日志条数报警
bsf.health.strategy.log.incre.count = [>3000]
## 钉钉报警的token，(项目组)
bsf.health.warn.dingding.project.access_token=
## 钉钉报警的token，(系统级别)
bsf.health.warn.dingding.system.access_token =






