package com.yz.sophia.insight.model.po;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class GeographicCityRelExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table geographic_city_rel
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table geographic_city_rel
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table geographic_city_rel
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table geographic_city_rel
     *
     * @mbggenerated
     */
    public GeographicCityRelExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table geographic_city_rel
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table geographic_city_rel
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table geographic_city_rel
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table geographic_city_rel
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table geographic_city_rel
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table geographic_city_rel
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table geographic_city_rel
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table geographic_city_rel
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table geographic_city_rel
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table geographic_city_rel
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table geographic_city_rel
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andCityIdIsNull() {
            addCriterion("city_id is null");
            return (Criteria) this;
        }

        public Criteria andCityIdIsNotNull() {
            addCriterion("city_id is not null");
            return (Criteria) this;
        }

        public Criteria andCityIdEqualTo(String value) {
            addCriterion("city_id =", value, "cityId");
            return (Criteria) this;
        }

        public Criteria andCityIdNotEqualTo(String value) {
            addCriterion("city_id <>", value, "cityId");
            return (Criteria) this;
        }

        public Criteria andCityIdGreaterThan(String value) {
            addCriterion("city_id >", value, "cityId");
            return (Criteria) this;
        }

        public Criteria andCityIdGreaterThanOrEqualTo(String value) {
            addCriterion("city_id >=", value, "cityId");
            return (Criteria) this;
        }

        public Criteria andCityIdLessThan(String value) {
            addCriterion("city_id <", value, "cityId");
            return (Criteria) this;
        }

        public Criteria andCityIdLessThanOrEqualTo(String value) {
            addCriterion("city_id <=", value, "cityId");
            return (Criteria) this;
        }

        public Criteria andCityIdLike(String value) {
            addCriterion("city_id like", value, "cityId");
            return (Criteria) this;
        }

        public Criteria andCityIdNotLike(String value) {
            addCriterion("city_id not like", value, "cityId");
            return (Criteria) this;
        }

        public Criteria andCityIdIn(List<String> values) {
            addCriterion("city_id in", values, "cityId");
            return (Criteria) this;
        }

        public Criteria andCityIdNotIn(List<String> values) {
            addCriterion("city_id not in", values, "cityId");
            return (Criteria) this;
        }

        public Criteria andCityIdBetween(String value1, String value2) {
            addCriterion("city_id between", value1, value2, "cityId");
            return (Criteria) this;
        }

        public Criteria andCityIdNotBetween(String value1, String value2) {
            addCriterion("city_id not between", value1, value2, "cityId");
            return (Criteria) this;
        }

        public Criteria andStatisticsMonthIsNull() {
            addCriterion("statistics_month is null");
            return (Criteria) this;
        }

        public Criteria andStatisticsMonthIsNotNull() {
            addCriterion("statistics_month is not null");
            return (Criteria) this;
        }

        public Criteria andStatisticsMonthEqualTo(String value) {
            addCriterion("statistics_month =", value, "statisticsMonth");
            return (Criteria) this;
        }

        public Criteria andStatisticsMonthNotEqualTo(String value) {
            addCriterion("statistics_month <>", value, "statisticsMonth");
            return (Criteria) this;
        }

        public Criteria andStatisticsMonthGreaterThan(String value) {
            addCriterion("statistics_month >", value, "statisticsMonth");
            return (Criteria) this;
        }

        public Criteria andStatisticsMonthGreaterThanOrEqualTo(String value) {
            addCriterion("statistics_month >=", value, "statisticsMonth");
            return (Criteria) this;
        }

        public Criteria andStatisticsMonthLessThan(String value) {
            addCriterion("statistics_month <", value, "statisticsMonth");
            return (Criteria) this;
        }

        public Criteria andStatisticsMonthLessThanOrEqualTo(String value) {
            addCriterion("statistics_month <=", value, "statisticsMonth");
            return (Criteria) this;
        }

        public Criteria andStatisticsMonthLike(String value) {
            addCriterion("statistics_month like", value, "statisticsMonth");
            return (Criteria) this;
        }

        public Criteria andStatisticsMonthNotLike(String value) {
            addCriterion("statistics_month not like", value, "statisticsMonth");
            return (Criteria) this;
        }

        public Criteria andStatisticsMonthIn(List<String> values) {
            addCriterion("statistics_month in", values, "statisticsMonth");
            return (Criteria) this;
        }

        public Criteria andStatisticsMonthNotIn(List<String> values) {
            addCriterion("statistics_month not in", values, "statisticsMonth");
            return (Criteria) this;
        }

        public Criteria andStatisticsMonthBetween(String value1, String value2) {
            addCriterion("statistics_month between", value1, value2, "statisticsMonth");
            return (Criteria) this;
        }

        public Criteria andStatisticsMonthNotBetween(String value1, String value2) {
            addCriterion("statistics_month not between", value1, value2, "statisticsMonth");
            return (Criteria) this;
        }

        public Criteria andRainfallMonthIsNull() {
            addCriterion("rainfall_month is null");
            return (Criteria) this;
        }

        public Criteria andRainfallMonthIsNotNull() {
            addCriterion("rainfall_month is not null");
            return (Criteria) this;
        }

        public Criteria andRainfallMonthEqualTo(Double value) {
            addCriterion("rainfall_month =", value, "rainfallMonth");
            return (Criteria) this;
        }

        public Criteria andRainfallMonthNotEqualTo(Double value) {
            addCriterion("rainfall_month <>", value, "rainfallMonth");
            return (Criteria) this;
        }

        public Criteria andRainfallMonthGreaterThan(Double value) {
            addCriterion("rainfall_month >", value, "rainfallMonth");
            return (Criteria) this;
        }

        public Criteria andRainfallMonthGreaterThanOrEqualTo(Double value) {
            addCriterion("rainfall_month >=", value, "rainfallMonth");
            return (Criteria) this;
        }

        public Criteria andRainfallMonthLessThan(Double value) {
            addCriterion("rainfall_month <", value, "rainfallMonth");
            return (Criteria) this;
        }

        public Criteria andRainfallMonthLessThanOrEqualTo(Double value) {
            addCriterion("rainfall_month <=", value, "rainfallMonth");
            return (Criteria) this;
        }

        public Criteria andRainfallMonthIn(List<Double> values) {
            addCriterion("rainfall_month in", values, "rainfallMonth");
            return (Criteria) this;
        }

        public Criteria andRainfallMonthNotIn(List<Double> values) {
            addCriterion("rainfall_month not in", values, "rainfallMonth");
            return (Criteria) this;
        }

        public Criteria andRainfallMonthBetween(Double value1, Double value2) {
            addCriterion("rainfall_month between", value1, value2, "rainfallMonth");
            return (Criteria) this;
        }

        public Criteria andRainfallMonthNotBetween(Double value1, Double value2) {
            addCriterion("rainfall_month not between", value1, value2, "rainfallMonth");
            return (Criteria) this;
        }

        public Criteria andSunlightMonthIsNull() {
            addCriterion("sunlight_month is null");
            return (Criteria) this;
        }

        public Criteria andSunlightMonthIsNotNull() {
            addCriterion("sunlight_month is not null");
            return (Criteria) this;
        }

        public Criteria andSunlightMonthEqualTo(Double value) {
            addCriterion("sunlight_month =", value, "sunlightMonth");
            return (Criteria) this;
        }

        public Criteria andSunlightMonthNotEqualTo(Double value) {
            addCriterion("sunlight_month <>", value, "sunlightMonth");
            return (Criteria) this;
        }

        public Criteria andSunlightMonthGreaterThan(Double value) {
            addCriterion("sunlight_month >", value, "sunlightMonth");
            return (Criteria) this;
        }

        public Criteria andSunlightMonthGreaterThanOrEqualTo(Double value) {
            addCriterion("sunlight_month >=", value, "sunlightMonth");
            return (Criteria) this;
        }

        public Criteria andSunlightMonthLessThan(Double value) {
            addCriterion("sunlight_month <", value, "sunlightMonth");
            return (Criteria) this;
        }

        public Criteria andSunlightMonthLessThanOrEqualTo(Double value) {
            addCriterion("sunlight_month <=", value, "sunlightMonth");
            return (Criteria) this;
        }

        public Criteria andSunlightMonthIn(List<Double> values) {
            addCriterion("sunlight_month in", values, "sunlightMonth");
            return (Criteria) this;
        }

        public Criteria andSunlightMonthNotIn(List<Double> values) {
            addCriterion("sunlight_month not in", values, "sunlightMonth");
            return (Criteria) this;
        }

        public Criteria andSunlightMonthBetween(Double value1, Double value2) {
            addCriterion("sunlight_month between", value1, value2, "sunlightMonth");
            return (Criteria) this;
        }

        public Criteria andSunlightMonthNotBetween(Double value1, Double value2) {
            addCriterion("sunlight_month not between", value1, value2, "sunlightMonth");
            return (Criteria) this;
        }

        public Criteria andStatisticsYearIsNull() {
            addCriterion("statistics_year is null");
            return (Criteria) this;
        }

        public Criteria andStatisticsYearIsNotNull() {
            addCriterion("statistics_year is not null");
            return (Criteria) this;
        }

        public Criteria andStatisticsYearEqualTo(Integer value) {
            addCriterion("statistics_year =", value, "statisticsYear");
            return (Criteria) this;
        }

        public Criteria andStatisticsYearNotEqualTo(Integer value) {
            addCriterion("statistics_year <>", value, "statisticsYear");
            return (Criteria) this;
        }

        public Criteria andStatisticsYearGreaterThan(Integer value) {
            addCriterion("statistics_year >", value, "statisticsYear");
            return (Criteria) this;
        }

        public Criteria andStatisticsYearGreaterThanOrEqualTo(Integer value) {
            addCriterion("statistics_year >=", value, "statisticsYear");
            return (Criteria) this;
        }

        public Criteria andStatisticsYearLessThan(Integer value) {
            addCriterion("statistics_year <", value, "statisticsYear");
            return (Criteria) this;
        }

        public Criteria andStatisticsYearLessThanOrEqualTo(Integer value) {
            addCriterion("statistics_year <=", value, "statisticsYear");
            return (Criteria) this;
        }

        public Criteria andStatisticsYearIn(List<Integer> values) {
            addCriterion("statistics_year in", values, "statisticsYear");
            return (Criteria) this;
        }

        public Criteria andStatisticsYearNotIn(List<Integer> values) {
            addCriterion("statistics_year not in", values, "statisticsYear");
            return (Criteria) this;
        }

        public Criteria andStatisticsYearBetween(Integer value1, Integer value2) {
            addCriterion("statistics_year between", value1, value2, "statisticsYear");
            return (Criteria) this;
        }

        public Criteria andStatisticsYearNotBetween(Integer value1, Integer value2) {
            addCriterion("statistics_year not between", value1, value2, "statisticsYear");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(Date value) {
            addCriterion("create_time =", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(Date value) {
            addCriterion("create_time <>", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(Date value) {
            addCriterion("create_time >", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("create_time >=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(Date value) {
            addCriterion("create_time <", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
            addCriterion("create_time <=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<Date> values) {
            addCriterion("create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<Date> values) {
            addCriterion("create_time not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(Date value1, Date value2) {
            addCriterion("create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
            addCriterion("create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table geographic_city_rel
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table geographic_city_rel
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}