<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yz.sophia.insight.dao.GeographicCityRelMapper" >
  <resultMap id="BaseResultMap" type="com.yz.sophia.insight.model.po.GeographicCityRel" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="city_id" property="cityId" jdbcType="VARCHAR" />
    <result column="statistics_month" property="statisticsMonth" jdbcType="VARCHAR" />
    <result column="rainfall_month" property="rainfallMonth" jdbcType="DOUBLE" />
    <result column="sunlight_month" property="sunlightMonth" jdbcType="DOUBLE" />
    <result column="statistics_year" property="statisticsYear" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, city_id, statistics_month, rainfall_month, sunlight_month, statistics_year, create_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yz.sophia.insight.model.po.GeographicCityRelExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from geographic_city_rel
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from geographic_city_rel
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from geographic_city_rel
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.yz.sophia.insight.model.po.GeographicCityRelExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from geographic_city_rel
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yz.sophia.insight.model.po.GeographicCityRel" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into geographic_city_rel (id, city_id, statistics_month, 
      rainfall_month, sunlight_month, statistics_year, 
      create_time)
    values (#{id,jdbcType=BIGINT}, #{cityId,jdbcType=VARCHAR}, #{statisticsMonth,jdbcType=VARCHAR}, 
      #{rainfallMonth,jdbcType=DOUBLE}, #{sunlightMonth,jdbcType=DOUBLE}, #{statisticsYear,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.yz.sophia.insight.model.po.GeographicCityRel" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into geographic_city_rel
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="cityId != null" >
        city_id,
      </if>
      <if test="statisticsMonth != null" >
        statistics_month,
      </if>
      <if test="rainfallMonth != null" >
        rainfall_month,
      </if>
      <if test="sunlightMonth != null" >
        sunlight_month,
      </if>
      <if test="statisticsYear != null" >
        statistics_year,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="cityId != null" >
        #{cityId,jdbcType=VARCHAR},
      </if>
      <if test="statisticsMonth != null" >
        #{statisticsMonth,jdbcType=VARCHAR},
      </if>
      <if test="rainfallMonth != null" >
        #{rainfallMonth,jdbcType=DOUBLE},
      </if>
      <if test="sunlightMonth != null" >
        #{sunlightMonth,jdbcType=DOUBLE},
      </if>
      <if test="statisticsYear != null" >
        #{statisticsYear,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yz.sophia.insight.model.po.GeographicCityRelExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from geographic_city_rel
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update geographic_city_rel
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.cityId != null" >
        city_id = #{record.cityId,jdbcType=VARCHAR},
      </if>
      <if test="record.statisticsMonth != null" >
        statistics_month = #{record.statisticsMonth,jdbcType=VARCHAR},
      </if>
      <if test="record.rainfallMonth != null" >
        rainfall_month = #{record.rainfallMonth,jdbcType=DOUBLE},
      </if>
      <if test="record.sunlightMonth != null" >
        sunlight_month = #{record.sunlightMonth,jdbcType=DOUBLE},
      </if>
      <if test="record.statisticsYear != null" >
        statistics_year = #{record.statisticsYear,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update geographic_city_rel
    set id = #{record.id,jdbcType=BIGINT},
      city_id = #{record.cityId,jdbcType=VARCHAR},
      statistics_month = #{record.statisticsMonth,jdbcType=VARCHAR},
      rainfall_month = #{record.rainfallMonth,jdbcType=DOUBLE},
      sunlight_month = #{record.sunlightMonth,jdbcType=DOUBLE},
      statistics_year = #{record.statisticsYear,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yz.sophia.insight.model.po.GeographicCityRel" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update geographic_city_rel
    <set >
      <if test="cityId != null" >
        city_id = #{cityId,jdbcType=VARCHAR},
      </if>
      <if test="statisticsMonth != null" >
        statistics_month = #{statisticsMonth,jdbcType=VARCHAR},
      </if>
      <if test="rainfallMonth != null" >
        rainfall_month = #{rainfallMonth,jdbcType=DOUBLE},
      </if>
      <if test="sunlightMonth != null" >
        sunlight_month = #{sunlightMonth,jdbcType=DOUBLE},
      </if>
      <if test="statisticsYear != null" >
        statistics_year = #{statisticsYear,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yz.sophia.insight.model.po.GeographicCityRel" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update geographic_city_rel
    set city_id = #{cityId,jdbcType=VARCHAR},
      statistics_month = #{statisticsMonth,jdbcType=VARCHAR},
      rainfall_month = #{rainfallMonth,jdbcType=DOUBLE},
      sunlight_month = #{sunlightMonth,jdbcType=DOUBLE},
      statistics_year = #{statisticsYear,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>