<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yz.sophia.insight.dao.ApplyApplicationMapper" >
  <resultMap id="BaseResultMap" type="com.yz.sophia.insight.model.po.ApplyApplication" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="application_code" property="applicationCode" jdbcType="VARCHAR" />
    <result column="application_name" property="applicationName" jdbcType="VARCHAR" />
    <result column="application_type" property="applicationType" jdbcType="VARCHAR" />
    <result column="application_describe" property="applicationDescribe" jdbcType="VARCHAR" />
    <result column="application_service" property="applicationService" jdbcType="VARCHAR" />
    <result column="audit_status" property="auditStatus" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="api_key" property="apiKey" jdbcType="VARCHAR" />
    <result column="secret_key" property="secretKey" jdbcType="VARCHAR" />
  </resultMap>

  <resultMap id="BaseResultMapNew" type="com.yz.sophia.insight.model.response.ApplyApplicationRelResp" extends="BaseResultMap">

  </resultMap>

  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, create_time, update_time, user_id, application_code, application_name, application_type, 
    application_describe, application_service, audit_status, status , api_key ,secret_key
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yz.sophia.insight.model.po.ApplyApplicationExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from apply_application
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMapNew" parameterType="java.lang.String" >

    select
    id,application_code,user_id,application_name,
    application_type,application_describe,audit_status,
    status,application_service,api_key,create_time
    from apply_application
    where
    status= 0
    <if test="applicationCode != null" >
      and application_code = #{applicationCode,jdbcType=VARCHAR}
    </if>

  </select>

  <select id="countByParam" resultType="java.lang.Integer" parameterType="map" >
    SELECT
    count(1)
    FROM
    `apply_application` AS aa
    LEFT JOIN sys_user AS su ON aa.user_id = su.id
    WHERE status= 0
    <if test="map.applicationName != null" >
      and aa.application_name = #{map.applicationName,jdbcType=VARCHAR}
    </if>
    <if test="map.nickname != null" >
      and su.nickname = #{map.nickname,jdbcType=VARCHAR}
    </if>
    <if test="map.mobile != null" >
      and su.mobile = #{map.mobile,jdbcType=VARCHAR}
    </if>
  </select>
<!--  <select id="selectPageByParam" resultMap="BaseResultMapNew" parameterType="map" >
    SELECT
      aa.*,
      su.nickname,
      su.mobile,
      su.company
    FROM
        `apply_application` AS aa
        LEFT JOIN sys_user AS su ON aa.user_id = su.id
        WHERE status= 0
    <if test="map.applicationName != null" >
      and aa.application_name = #{map.applicationName,jdbcType=VARCHAR}
    </if>
    <if test="map.nickname != null" >
     and su.nickname = #{map.nickname,jdbcType=VARCHAR}
    </if>
    <if test="map.mobile != null" >
      and su.mobile = #{map.mobile,jdbcType=VARCHAR}
    </if>

    order by create_time desc

    limit ${map.offset}, ${map.pageSize}

  </select>-->

  <select id="selectPageByExample" resultMap="BaseResultMap" parameterType="com.yz.sophia.insight.model.po.ApplyApplicationExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from apply_application
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    limit ${offset}, ${pageSize}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from apply_application
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.yz.sophia.insight.model.po.ApplyApplicationExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from apply_application
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yz.sophia.insight.model.po.ApplyApplication" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into apply_application ( create_time, update_time,
      user_id, application_code, application_name, 
      application_type, application_describe, application_service, audit_status,
      status,api_key,secret_key)
    values ( #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP},
      #{userId,jdbcType=VARCHAR}, #{applicationCode,jdbcType=VARCHAR}, #{applicationName,jdbcType=VARCHAR}, 
      #{applicationType,jdbcType=VARCHAR}, #{applicationDescribe,jdbcType=VARCHAR},#{applicationService,jdbcType=VARCHAR}, #{auditStatus,jdbcType=INTEGER},
      #{status,jdbcType=INTEGER},#{apiKey,jdbcType=VARCHAR},#{secretKey,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yz.sophia.insight.model.po.ApplyApplication" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into apply_application
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="applicationCode != null" >
        application_code,
      </if>
      <if test="applicationName != null" >
        application_name,
      </if>
      <if test="applicationType != null" >
        application_type,
      </if>
      <if test="applicationDescribe != null" >
        application_describe,
      </if>
      <if test="applicationService != null" >
        application_service,
      </if>
      <if test="auditStatus != null" >
        audit_status,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="applicationCode != null" >
        #{applicationCode,jdbcType=VARCHAR},
      </if>
      <if test="applicationName != null" >
        #{applicationName,jdbcType=VARCHAR},
      </if>
      <if test="applicationType != null" >
        #{applicationType,jdbcType=VARCHAR},
      </if>
      <if test="applicationDescribe != null" >
        #{applicationDescribe,jdbcType=VARCHAR},
      </if>
      <if test="auditStatus != null" >
        #{auditStatus,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yz.sophia.insight.model.po.ApplyApplicationExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from apply_application
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update apply_application
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.applicationCode != null" >
        application_code = #{record.applicationCode,jdbcType=VARCHAR},
      </if>
      <if test="record.applicationService != null" >
        application_service = #{record.applicationService,jdbcType=VARCHAR},
      </if>
      <if test="record.applicationName != null" >
        application_name = #{record.applicationName,jdbcType=VARCHAR},
      </if>
      <if test="record.applicationType != null" >
        application_type = #{record.applicationType,jdbcType=VARCHAR},
      </if>
      <if test="record.applicationDescribe != null" >
        application_describe = #{record.applicationDescribe,jdbcType=VARCHAR},
      </if>
      <if test="record.auditStatus != null" >
        audit_status = #{record.auditStatus,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update apply_application
    set id = #{record.id,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      user_id = #{record.userId,jdbcType=VARCHAR},
      application_code = #{record.applicationCode,jdbcType=VARCHAR},
      application_name = #{record.applicationName,jdbcType=VARCHAR},
      application_type = #{record.applicationType,jdbcType=VARCHAR},
      application_describe = #{record.applicationDescribe,jdbcType=VARCHAR},
      audit_status = #{record.auditStatus,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

  <update id="updateStatusByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update apply_application
    set
    status = #{record.status,jdbcType=INTEGER},
    update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

  <update id="updateByPrimaryKeySelective" parameterType="com.yz.sophia.insight.model.po.ApplyApplication" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update apply_application
    <set >
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="applicationCode != null" >
        application_code = #{applicationCode,jdbcType=VARCHAR},
      </if>
      <if test="applicationName != null" >
        application_name = #{applicationName,jdbcType=VARCHAR},
      </if>
      <if test="applicationType != null" >
        application_type = #{applicationType,jdbcType=VARCHAR},
      </if>
      <if test="applicationDescribe != null" >
        application_describe = #{applicationDescribe,jdbcType=VARCHAR},
      </if>
      <if test="auditStatus != null" >
        audit_status = #{auditStatus,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yz.sophia.insight.model.po.ApplyApplication" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update apply_application
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      user_id = #{userId,jdbcType=VARCHAR},
      application_code = #{applicationCode,jdbcType=VARCHAR},
      application_name = #{applicationName,jdbcType=VARCHAR},
      application_type = #{applicationType,jdbcType=VARCHAR},
      application_describe = #{applicationDescribe,jdbcType=VARCHAR},
      audit_status = #{auditStatus,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>